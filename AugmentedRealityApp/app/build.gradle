plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 33
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.augmentedrealityapp"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            // Use ngrok (@https://ngrok.com/) to work with localhost on Android
            buildConfigField('String', 'SIGNALING_SERVER_URL', '"https://d816-89-201-173-178.ngrok-free.app/hubs"')
            buildConfigField('String', 'STUN_SERVER_1', '"stun:stun.1.google.com:19302"')
            buildConfigField('String', 'STUN_SERVER_2', '"stun:eu-turn2.xirsys.com"')
            buildConfigField('String', 'TURN_SERVER_URL',  '""')
            buildConfigField('String', 'TURN_SERVER_USERNAME', '""')
            buildConfigField('String', 'TURN_SERVER_CREDENTIAL',  '""')

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            minifyEnabled false
        }
        release {
            buildConfigField('String', 'SIGNALING_SERVER_URL', '"https://webrtc-signaling-server.azurewebsites.net/hubs"')
            buildConfigField('String', 'STUN_SERVER_1', '"stun:stun.1.google.com:19302"')
            buildConfigField('String', 'STUN_SERVER_2', '"stun:eu-turn2.xirsys.com"')
            buildConfigField('String', 'TURN_SERVER_URL',  String.format('"%s"', getTurnUrl(project)))
            buildConfigField('String', 'TURN_SERVER_USERNAME', String.format('"%s"', getTurnUsername(project)))
            buildConfigField('String', 'TURN_SERVER_CREDENTIAL',  String.format('"%s"', getTurnCredential(project)))

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Android core
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // Tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // Gson
    implementation 'com.google.code.gson:gson:2.8.9'
    // WebRTC
    implementation 'org.webrtc:google-webrtc:1.0.30039'
    // SignalR
    implementation 'com.microsoft.signalr:signalr:3.1.22'
}

// this method reads 'turn.url=' variable in local.properties
def static getTurnUrl(project) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
    return properties.getProperty("turn.url", "");
}

// this method reads 'turn.username=' variable in local.properties
def static getTurnUsername(project) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
    return properties.getProperty("turn.username", "");
}

// this method reads 'turn.credential=' variable in local.properties
def static getTurnCredential(project) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
    return properties.getProperty("turn.credential", "");
}